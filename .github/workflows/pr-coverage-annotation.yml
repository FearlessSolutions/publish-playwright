name: PR Coverage Annotation

on:
  pull_request:
    branches:
      - main

# ensures that currently running PR Coverage Annotation workflow is canceled if another one starts
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: write
  pull-requests: write

jobs:
  coverage-report:
    runs-on: ubuntu-latest
    outputs:
      actualResult: ${{ steps.test.conclusion }}
    steps:
      - uses: actions/checkout@v4
#### this is our set up for installing and running the tests, update this with your set up and test run ####
      - uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install
      - name: Run Tests
        id: test
        continue-on-error: true
        run: pnpm exec vitest --coverage
#### end set up and test run ####
      - name: Get run ID of Code Coverage Report workflow
        # gets the run id of the last time Code Coverage Report ran so that it can be used to download that artifact
        id: get-run-id
        continue-on-error: true
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          WF_NAME="Code Coverage Report"
          RUN_ID=`gh run list --workflow "${WF_NAME}" --json databaseId --jq .[0].databaseId`
          echo "Detected latest run id of ${RUN_ID} for workflow ${WF_NAME}"
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
      - uses: actions/download-artifact@v4
        if: steps.get-run-id.conclusion == 'success'
        # if we were able to get the run id, download that json summary report using the run id
        id: get-main-coverage
        continue-on-error: true
        with:
          name: json-main-coverage-report
          path: main-coverage
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ steps.get-run-id.outputs.run-id }}
      - name: Report Coverage (compared with Main)
        if: ${{ steps.get-run-id.conclusion == 'success' && steps.get-main-coverage.conclusion == 'success' }}
        # if we were able to get the run id and download the main json summary report, then compare it to the current json summary report and add that to the PR
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          json-summary-compare-path: main-coverage/coverage-summary.json
          file-coverage-mode: all
      - name: Report Coverage (only PR)
        if: ${{ failure() }}
        # if we were not able to get the run id or download the main json summary report, then just add the current json summary report to the PR
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          file-coverage-mode: all
